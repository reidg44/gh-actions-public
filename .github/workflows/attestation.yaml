name: attestation-generation
on: [push]

jobs:
  # https://github.com/actions/attest?tab=readme-ov-file#container-image
  build:
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: CheckoutCode
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: SetUpDockerBuildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3
      - uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5
        name: BuildAndPushDockerImage
        id: push
        with:
          push: true
          file: python-example/Dockerfile
          context: ./python-example
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          # outputs: type=docker,dest=/tmp/myimage.tar
      - name: Create Attestation
        uses: actions/attest@6b4853d50e8c5f5193744800068f165b731b31b8 # v1
        id: attest
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          predicate-type: 'https://in-toto.io/attestation/release/v0.1'
          predicate: '{"purl":"pkg:oci/..."}'
          push-to-registry: true
